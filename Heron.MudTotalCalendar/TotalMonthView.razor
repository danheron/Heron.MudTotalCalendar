@inherits MonthView

@Render

@code {

    protected override RenderFragment RenderHeader =>
        @<tr>
            @for (var i = 0; i < 7; i++)
            {
                <th>
                    @Cells[i].Date.ToString("ddd")
                </th>
            }
            <th>Total</th>
        </tr>;

    protected override RenderFragment RenderBody => __builder =>
    {
        for (var week = 0; week < Cells.Count / 8; week++)
        {
            <tr style="@RowStyle">
                @for (var i = week * 8; i < (week + 1) * 8; i++)
                {
                    var cell = Cells[i];
                    @RenderCell(cell)
                }
            </tr>
        }
        RenderMonthTotalRow(__builder);
    };

    protected virtual RenderFragment RenderMonthTotalRow =>
        @<tr>
            @for (var i = 0; i < 7; i++)
            {
                <td></td>
            }
            @RenderMonthTotalCell(Cells.Last())
        </tr>;

    protected virtual RenderFragment RenderDayTotalCell(CalendarCell cell) =>
        @<div class="mud-cal-month-cell" style="@DayStyle(cell)">
            @RenderCellDayNumber(cell)
            @foreach (var value in ((TotalCell)cell).Values)
            {
                @RenderTotal(value, GetDayTotalStyle(value.Definition))
            }
            @RenderCellContents(cell)
        </div>;

    protected virtual RenderFragment RenderWeekTotalCell(CalendarCell cell) =>
        @<div class="mud-cal-month-cell mud-cal-total-cell" style="@DayStyle(cell)">
            <div class="mud-cal-month-cell-title">Week Total</div>
            @foreach (var value in ((TotalCell)cell).Values)
            {
                @RenderTotal(value, GetWeekTotalStyle(value.Definition))
            }
        </div>;

    protected virtual RenderFragment RenderMonthTotalCell(CalendarCell cell) =>
        @<div class="mud-cal-month-cell mud-cal-total-cell" style="@DayStyle(cell)">
            <div class="mud-cal-month-cell-title">Month Total</div>
            @foreach (var value in ((TotalCell)cell).Values)
            {
                @RenderTotal(value, GetMonthTotalStyle(value.Definition))
            }
        </div>;

    protected override RenderFragment RenderCell(CalendarCell cell) =>
        @<td>
            @if (((TotalCell)cell).WeekTotal)
            {
                @RenderWeekTotalCell(cell)
            }
            else if (((TotalCell)cell).MonthTotal)
            {
                @RenderMonthTotalCell(cell)
            }
            else
            {
                @RenderDayTotalCell(cell)
            }
        </td>;

    protected virtual RenderFragment RenderTotal(Value value, string style) =>
        @<div class="mud-cal-total" style="@style">
            <div class="mud-cal-total-name">@value.Definition.Name</div>
            <div class="mud-cal-total-value">@FormatValue(value)</div>
        </div>;

}